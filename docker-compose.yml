version: "3.8"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: "traefik:v2.2"
    container_name: "traefik"
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      # The http port port on left - host machine : port on container
      - "80:80"
      # The web UI (enabled by --api.insecure=true) traefik dashboard
      - "8080:8080"
    volumes:
      #So that Traefik can listen to the docker events
      - "/var/run/docker.sock:/var/run/docker.sock"
  postgres-account:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    #   Set a volume for data and initial sql script
    #   May configure initial db for future demo
    volumes:
    - "pgdata_account:/var/lib/postgresql/data"
      # - ./init:/docker-entrypoint-initdb.d/
    command: ["postgres", "-c", "log_statement=all"]
  account:
    build:
      context: "./account"
      target: "builder"
    # A container that exposes an API to show its IP address
    image: "account"
    container_name: "go-server"
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`malcorp.test`) && PathPrefix(`/api/account`)"
    environment:
      - ENV=dev
    # linking the enviromental params
    env_file: "./account/.env.dev"
    volumes:
      - ./account:/go/src/app
    depends_on:
      - postgres-account
      - redis-account
      - reverse-proxy
    # have to use $$ (double-dollar) so docker doesn't try to substitute a variable
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"
  redis-account:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
  account-client:
    build:
      context: ./account-client
    image: account-client # if we don't give image name, traefik won't create router ü§∑‚Äç‚ôÇÔ∏è
    expose:
      - "5173"
    ports:
      - "5173:5173"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account-client.rule=Host(`malcorp.test`) && PathPrefix(`/account`)"
    volumes:
      - ./account-client:/app
      - /app/node_modules #avoid overwriting node_modules
    depends_on: 
      - reverse-proxy
volumes:
  pgdata_account:
  redisdata: